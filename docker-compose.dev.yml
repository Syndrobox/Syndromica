services:
  client:
    build:
      context: .
      dockerfile: ./Dockerfile-Dev
    command: ["npm", "run", "client:dev"]
    depends_on:
      - server
    environment:
      - BASE_URL=http://server:3000
    networks:
      - syndromica
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/src/syndromica
      - /usr/src/syndromica/node_modules
      - /usr/src/syndromica/website/client/node_modules
  server:
    build:
      context: .
      dockerfile: ./Dockerfile-Dev
    command: ["npm", "start"]
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - NODE_DB_URI=mongodb://mongo/syndrobox
    networks:
      - syndromica
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/syndromica
      - /usr/src/syndromica/node_modules
  mongo:
    image: mongo:5.0.23
    restart: unless-stopped
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate() }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - syndromica
    ports:
      - "27017:27017"
networks:
  syndromica:
    driver: bridge
